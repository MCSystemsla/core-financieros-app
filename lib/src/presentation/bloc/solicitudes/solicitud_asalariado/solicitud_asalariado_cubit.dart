import 'package:bloc/bloc.dart';
import 'package:core_financiero_app/src/datasource/solicitudes/asalariado/solicitud_asalariado.dart';
import 'package:core_financiero_app/src/domain/repository/solicitudes_credito/solicitudes_credito_repository.dart';
import 'package:core_financiero_app/src/presentation/bloc/auth/branch_team/branchteam_cubit.dart';
import 'package:equatable/equatable.dart';

part 'solicitud_asalariado_state.dart';

class SolicitudAsalariadoCubit extends Cubit<SolicitudAsalariadoState> {
  final SolicitudesCreditoRepository _repository;
  SolicitudAsalariadoCubit(this._repository)
      : super(SolicitudAsalariadoInitial());

  Future<void> createSolicitudAsalariado() async {
    emit(state.copyWith(status: Status.inProgress));
    try {
      final (isOk, msg) = await _repository.createSolicitudAsalariado(
        solicitudAsalariado: SolicitudAsalariado(
          objOrigenSolicitudId: state.objOrigenSolicitudId,
          database: state.database,
          nombre1: state.nombre1,
          nombre2: state.nombre2,
          apellido1: state.apellido1,
          apellido2: state.apellido2,
          cedula: state.cedula,
          objPaisEmisorCedula: state.objPaisEmisorCedula,
          fechaEmisionCedula: DateTime.tryParse(state.fechaEmisionCedula),
          fechaVencimientoCedula:
              DateTime.tryParse(state.fechaVencimientoCedula),
          fechaNacimiento: DateTime.tryParse(state.fechaNacimiento),
          telefono: state.telefono,
          celular: state.celular,
          direccionCasa: state.direccionCasa,
          barrioCasa: state.barrioCasa,
          objMunicipioCasaId: state.objMunicipioCasaId,
          objDepartamentoCasaId: state.objDepartamentoCasaId,
          objPaisCasaId: state.objPaisCasaId,
          profesion: state.profesion,
          ocupacion: state.ocupacion,
          nacionalidad: state.nacionalidad,
          objCondicionCasaId: state.objCondicionCasaId,
          anosResidirCasa: state.anosResidirCasa,
          email: state.email,
          monto: state.monto,
          objMonedaId: state.objMonedaId,
          objPropositoId: state.objPropositoId,
          objFrecuenciaId: state.objFrecuenciaId,
          cuota: state.cuota,
          objSectorId: state.objSectorId,
          personasACargo: state.personasACargo,
          objEstadoCivilId: state.objEstadoCivilId,
          nombreConyugue: state.nombreConyugue,
          trabajaConyugue: state.trabajaConyugue,
          trabajoConyugue: state.trabajoConyugue,
          direccionTrabajoConyugue: state.direccionTrabajoConyugue,
          telefonoTrabajoConyugue: state.telefonoTrabajoConyugue,
          beneficiarioSeguro: state.beneficiarioSeguro,
          cedulaBeneficiarioSeguro: state.cedulaBeneficiarioSeguro,
          objParentescoBeneficiarioSeguroId:
              state.objParentescoBeneficiarioSeguroId,
          objEstadoSolicitudId: state.objEstadoSolicitudId,
          objOficialCreditoId: state.objOficialCreditoId,
          objProductoId: state.objProductoId,
          observacion: state.observacion,
          sucursal: state.sucursal,
          ubicacionLongitud: state.ubicacionLongitud,
          ubicacionLatitud: state.ubicacionLatitud,
          ubicacionGradosLongitud: state.ubicacionGradosLongitud,
          ubicacionGradosLatitud: state.ubicacionGradosLatitud,
          objEscolaridadId: state.objEscolaridadId,
          cantidadHijos: state.cantidadHijos,
          nombrePublico: state.nombrePublico,
          objSexoId: state.objSexoId,
          objPaisNacimientoId: state.objPaisNacimientoId,
          nacionalidadConyugue: state.nacionalidadConyugue,
          ubicacion: state.ubicacion,
          espeps: state.espeps,
          nombreDeEntidadPeps: state.nombreDeEntidadPeps,
          paisPeps: state.paisPeps,
          periodoPeps: state.periodoPeps,
          cargoOficialPeps: state.cargoOficialPeps,
          tieneFamiliarPeps: state.tieneFamiliarPeps,
          nombreFamiliarPeps2: state.nombreFamiliarPeps2,
          parentescoFamiliarPeps2: state.parentescoFamiliarPeps2,
          cargoFamiliarPeps2: state.cargoFamiliarPeps2,
          nombreEntidadPeps2: state.nombreEntidadPeps2,
          periodoPeps2: state.periodoPeps2,
          paisPeps2: state.paisPeps2,
          objRubroActividad: state.objRubroActividad,
          objActividadPredominante: state.objActividadPredominante,
          esFamiliarEmpleado: state.esFamiliarEmpleado,
          nombreFamiliar: state.nombreFamiliar,
          cedulaFamiliar: state.cedulaFamiliar,
          objTipoDocumentoId: state.objTipoDocumentoId,
          objRubroActividad2: state.objRubroActividad2,
          objRubroActividad3: state.objRubroActividad3,
          objRubroActividadPredominante: state.objRubroActividadPredominante,
          tipoPersona: state.tipoPersona,
          objTipoPersonaId: state.objTipoPersonaId,
          telefonoBeneficiario: state.telefonoBeneficiario,
          codigoRed: state.codigoRed,
          plazoSolicitud: state.plazoSolicitud,
          fechaPrimerPagoSolicitud:
              DateTime.tryParse(state.fechaPrimerPagoSolicitud),
          nombreTrabajo: state.nombreTrabajo,
          direccionTrabajo: state.direccionTrabajo,
          barrioTrabajo: state.barrioTrabajo,
          objActividadEconomicaId: state.objActividadEconomicaId,
          objActividadEconomicaId1: state.objActividadEconomicaId1,
          objActividadEconomicaId2: state.objActividadEconomicaId2,
          cargo: state.cargo,
          direccionFamiliarCercano: state.direccionFamiliarCercano,
          duenoVivienda: state.duenoVivienda,
          fechaVenceAvaluoAsalariado:
              DateTime.tryParse(state.fechaVenceAvaluoAsalariado),
          fuenteOtrosIngresos: state.fuenteOtrosIngresos,
          fuenteOtrosIngresosConyugue: state.fuenteOtrosIngresosConyugue,
          lugarTrabajoAnterior: state.lugarTrabajoAnterior,
          nombreFamiliarCercano: state.nombreFamiliarCercano,
          objParentescoFamiliarCercanoId: state.objParentescoFamiliarCercanoId,
          otrosIngresosConyugue: state.otrosIngresosConyugue,
          otrosIngresosCordoba: state.otrosIngresosCordoba,
          pagoAlquiler: state.pagoAlquiler,
          profesionConyugue: state.profesionConyugue,
          salarioNetoCordoba: state.salarioNetoCordoba,
          sueldoMesConyugue: state.sueldoMesConyugue,
          telefonoFamiliarCercano: state.telefonoFamiliarCercano,
          telefonoTrabajo: state.telefonoTrabajo,
          tiempoLaborar: state.tiempoLaborar,
          tiempoLaborarConyugue: state.tiempoLaborarConyugue,
          totalIngresoMes: state.totalIngresoMes,
          totalIngresoMesConyugue: state.totalIngresoMesConyugue,
        ),
      );
      if (!isOk) {
        emit(state.copyWith(
          status: Status.error,
          errorMsg: msg,
        ));
        return;
      }
      emit(state.copyWith(
        status: Status.done,
        successMsg: msg,
      ));
    } catch (e) {
      emit(state.copyWith(
        errorMsg: e.toString(),
        status: Status.error,
      ));
    }
  }

  void saveAnswers({
    String? database,
    String? nombre1,
    String? nombre2,
    String? apellido1,
    String? apellido2,
    String? cedula,
    String? objPaisEmisorCedula,
    String? fechaEmisionCedula,
    String? fechaVencimientoCedula,
    String? fechaNacimiento,
    String? telefono,
    String? celular,
    String? direccionCasa,
    String? barrioCasa,
    String? objMunicipioCasaId,
    String? objDepartamentoCasaId,
    String? objPaisCasaId,
    String? profesion,
    String? ocupacion,
    String? nacionalidad,
    String? objCondicionCasaId,
    int? anosResidirCasa,
    String? email,
    double? monto,
    String? objMonedaId,
    String? objPropositoId,
    String? objFrecuenciaId,
    double? cuota,
    String? objSectorId,
    int? personasACargo,
    String? objEstadoCivilId,
    String? nombreConyugue,
    bool? trabajaConyugue,
    String? trabajoConyugue,
    String? direccionTrabajoConyugue,
    String? telefonoTrabajoConyugue,
    String? beneficiarioSeguro,
    String? cedulaBeneficiarioSeguro,
    String? objParentescoBeneficiarioSeguroId,
    String? objEstadoSolicitudId,
    String? objOficialCreditoId,
    String? objProductoId,
    String? observacion,
    String? sucursal,
    String? ubicacionLongitud,
    String? ubicacionLatitud,
    String? ubicacionGradosLongitud,
    String? ubicacionGradosLatitud,
    String? objEscolaridadId,
    int? cantidadHijos,
    String? nombrePublico,
    String? objSexoId,
    String? objPaisNacimientoId,
    String? nacionalidadConyugue,
    String? ubicacion,
    bool? espeps,
    String? nombreDeEntidadPeps,
    String? paisPeps,
    String? periodoPeps,
    String? cargoOficialPeps,
    bool? tieneFamiliarPeps,
    String? nombreFamiliarPeps2,
    String? parentescoFamiliarPeps2,
    String? cargoFamiliarPeps2,
    String? nombreEntidadPeps2,
    String? periodoPeps2,
    String? paisPeps2,
    String? objRubroActividad,
    String? objActividadPredominante,
    bool? esFamiliarEmpleado,
    String? nombreFamiliar,
    String? cedulaFamiliar,
    String? objTipoDocumentoId,
    String? objRubroActividad2,
    String? objRubroActividad3,
    String? objRubroActividadPredominante,
    String? tipoPersona,
    String? objTipoPersonaId,
    String? telefonoBeneficiario,
    String? codigoRed,
    int? plazoSolicitud,
    String? fechaPrimerPagoSolicitud,
    String? nombreTrabajo,
    String? direccionTrabajo,
    String? barrioTrabajo,
    String? objActividadEconomicaId,
    String? objActividadEconomicaId1,
    String? objActividadEconomicaId2,
    String? cargo,
    String? direccionFamiliarCercano,
    String? duenoVivienda,
    String? fechaVenceAvaluoAsalariado,
    String? fuenteOtrosIngresos,
    String? fuenteOtrosIngresosConyugue,
    String? lugarTrabajoAnterior,
    String? nombreFamiliarCercano,
    String? objParentescoFamiliarCercanoId,
    double? otrosIngresosConyugue,
    double? otrosIngresosCordoba,
    int? pagoAlquiler,
    String? profesionConyugue,
    double? salarioNetoCordoba,
    double? sueldoMesConyugue,
    String? telefonoFamiliarCercano,
    String? telefonoTrabajo,
    String? tiempoLaborar,
    String? tiempoLaborarConyugue,
    double? totalIngresoMes,
    double? totalIngresoMesConyugue,
  }) {
    emit(
      state.copyWith(
        database: database,
        nombre1: nombre1,
        nombre2: nombre2,
        apellido1: apellido1,
        apellido2: apellido2,
        cedula: cedula,
        objPaisEmisorCedula: objPaisEmisorCedula,
        fechaEmisionCedula: fechaEmisionCedula,
        fechaVencimientoCedula: fechaVencimientoCedula,
        fechaNacimiento: fechaNacimiento,
        telefono: telefono,
        celular: celular,
        direccionCasa: direccionCasa,
        barrioCasa: barrioCasa,
        objMunicipioCasaId: objMunicipioCasaId,
        objDepartamentoCasaId: objDepartamentoCasaId,
        objPaisCasaId: objPaisCasaId,
        profesion: profesion,
        ocupacion: ocupacion,
        nacionalidad: nacionalidad,
        objCondicionCasaId: objCondicionCasaId,
        anosResidirCasa: anosResidirCasa,
        email: email,
        monto: monto,
        objMonedaId: objMonedaId,
        objPropositoId: objPropositoId,
        objFrecuenciaId: objFrecuenciaId,
        cuota: cuota,
        objSectorId: objSectorId,
        personasACargo: personasACargo,
        objEstadoCivilId: objEstadoCivilId,
        nombreConyugue: nombreConyugue,
        trabajaConyugue: trabajaConyugue,
        trabajoConyugue: trabajoConyugue,
        direccionTrabajoConyugue: direccionTrabajoConyugue,
        telefonoTrabajoConyugue: telefonoTrabajoConyugue,
        beneficiarioSeguro: beneficiarioSeguro,
        cedulaBeneficiarioSeguro: cedulaBeneficiarioSeguro,
        objParentescoBeneficiarioSeguroId: objParentescoBeneficiarioSeguroId,
        objEstadoSolicitudId: objEstadoSolicitudId,
        objOficialCreditoId: objOficialCreditoId,
        objProductoId: objProductoId,
        observacion: observacion,
        sucursal: sucursal,
        ubicacionLongitud: ubicacionLongitud,
        ubicacionLatitud: ubicacionLatitud,
        ubicacionGradosLongitud: ubicacionGradosLongitud,
        ubicacionGradosLatitud: ubicacionGradosLatitud,
        objEscolaridadId: objEscolaridadId,
        cantidadHijos: cantidadHijos,
        nombrePublico: nombrePublico,
        objSexoId: objSexoId,
        objPaisNacimientoId: objPaisNacimientoId,
        nacionalidadConyugue: nacionalidadConyugue,
        ubicacion: ubicacion,
        espeps: espeps,
        nombreDeEntidadPeps: nombreDeEntidadPeps,
        paisPeps: paisPeps,
        periodoPeps: periodoPeps,
        cargoOficialPeps: cargoOficialPeps,
        tieneFamiliarPeps: tieneFamiliarPeps,
        nombreFamiliarPeps2: nombreFamiliarPeps2,
        parentescoFamiliarPeps2: parentescoFamiliarPeps2,
        cargoFamiliarPeps2: cargoFamiliarPeps2,
        nombreEntidadPeps2: nombreEntidadPeps2,
        periodoPeps2: periodoPeps2,
        paisPeps2: paisPeps2,
        objRubroActividad: objRubroActividad,
        objActividadPredominante: objActividadPredominante,
        esFamiliarEmpleado: esFamiliarEmpleado,
        nombreFamiliar: nombreFamiliar,
        cedulaFamiliar: cedulaFamiliar,
        objTipoDocumentoId: objTipoDocumentoId,
        objRubroActividad2: objRubroActividad2,
        objRubroActividad3: objRubroActividad3,
        objRubroActividadPredominante: objRubroActividadPredominante,
        tipoPersona: tipoPersona,
        objTipoPersonaId: objTipoPersonaId,
        telefonoBeneficiario: telefonoBeneficiario,
        codigoRed: codigoRed,
        plazoSolicitud: plazoSolicitud,
        fechaPrimerPagoSolicitud: fechaPrimerPagoSolicitud,
        nombreTrabajo: nombreTrabajo,
        direccionTrabajo: direccionTrabajo,
        barrioTrabajo: barrioTrabajo,
        objActividadEconomicaId: objActividadEconomicaId,
        objActividadEconomicaId1: objActividadEconomicaId1,
        objActividadEconomicaId2: objActividadEconomicaId2,
        cargo: cargo,
        direccionFamiliarCercano: direccionFamiliarCercano,
        duenoVivienda: duenoVivienda,
        fechaVenceAvaluoAsalariado: fechaVenceAvaluoAsalariado,
        fuenteOtrosIngresos: fuenteOtrosIngresos,
        fuenteOtrosIngresosConyugue: fuenteOtrosIngresosConyugue,
        lugarTrabajoAnterior: lugarTrabajoAnterior,
        nombreFamiliarCercano: nombreFamiliarCercano,
        objParentescoFamiliarCercanoId: objParentescoFamiliarCercanoId,
        otrosIngresosConyugue: otrosIngresosConyugue,
        otrosIngresosCordoba: otrosIngresosCordoba,
        pagoAlquiler: pagoAlquiler,
        profesionConyugue: profesionConyugue,
        salarioNetoCordoba: salarioNetoCordoba,
        sueldoMesConyugue: sueldoMesConyugue,
        telefonoFamiliarCercano: telefonoFamiliarCercano,
        telefonoTrabajo: telefonoTrabajo,
        tiempoLaborar: tiempoLaborar,
        tiempoLaborarConyugue: tiempoLaborarConyugue,
        totalIngresoMes: totalIngresoMes,
        totalIngresoMesConyugue: totalIngresoMesConyugue,
      ),
    );
  }
}
